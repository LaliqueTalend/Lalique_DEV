package routines;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */

public class eric {

    /**
     * Arrondi à l'int le plus proche de l'argument en paramètre.
     *
     * {talendTypes} int | Int
     *
     * {Category} 
     *
     * {param} float(3.14f)
     *
     * {example} round(3.14f)
     */
	public static int round(float a) {
    	// this check for NaN, from JLS 15.21.1, saves a method call
		if (a != a)
           return 0;
        return (int) Math.round(Math.abs(a)) * (a < 0 ? -1 : 1 );
    }

   
    /**
     * Arrondi au float le plus proche de l'argument en paramètre.
     *
     * {talendTypes} long | Long
     *
     * {Category} 
     *
     * {param} double(3.14)
     *
     * {example} round(3.14)
     */
    public static long round(double a) {
    	// this check for NaN, from JLS 15.21.1, saves a method call
    	if (a != a)
           return 0;
        return (long) Math.round(Math.abs(a)) * (a < 0 ? -1 : 1 );
    }

}
